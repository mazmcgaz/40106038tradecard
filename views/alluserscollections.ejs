<%- include("partials/header.ejs") %>

<style>
  .action-item {
    background-color: #96cc6a;
    border: 1px solid #ced4da;
    padding: 10px;
    margin-bottom: 10px;
    color: black;
  }

  .action-item:hover {
    background-color: #cde6b8;
  }
</style>

<main>
  <div class="px-4 pt-5 my-5 text-center border-bottom">
    <h1 class="display-4 fw-bold text-body-emphasis">
      <%= viewedMemberDisplayName %>'s Collections
    </h1>

    <!-- Display the user image -->
    <img
      class="user-image"
      src="<%= collections.length > 0 ? collections[0].user_image : '' %>"
      alt="display picture for the user"
    />

    <!-- Conditional display based on collections -->
    <% if (collections && collections.length > 0 &&
    collections[0].collection_name !== null && collections[0].collection_id !==
    null) { %>
    <h3>
      You can rate, comment on, or like <%= viewedMemberDisplayName %>'s
      collections.
    </h3>
    <% } else { %>
    <h4><%= viewedMemberDisplayName %> does not have any collections.</h4>
    <% } %>

    <div class="container">
      <div class="row">
        <div class="card-body text-center">
          <a href="/views/allusers" class="btn btn-primary back-to-cards-button"
            >Back to Members</a
          >
        </div>
      </div>
    </div>

    <hr class="my-4" />

    <div class="container">
      <div class="row">
        <% if (collections && collections.length > 0 &&
        collections[0].collection_name !== null && collections[0].collection_id
        !== null) { %> <% collections.forEach((collection) => { %>
        <div class="col-md-4">
          <div class="card mb-3">
            <div class="card-body">
              <h4><%= collection.collection_name %></h4>
              <p><%= collection.collection_description %></p>
              <p>Likes: <%= collection.like_count %></p>
              <a
                href="/views/collectiondetails/<%= collection.collection_id %>"
                class="btn btn-primary"
                >View Collection</a
              >

              <!-- Ratings section -->
              <% if (userLoggedIn) { %>

              <button
                id="like-button<%= collection.collection_id %>"
                onclick="toggleLike()"
              >
                Like
              </button>
              <span id="like-count<%= collection.collection_id %>"></span>

              <div class="container" id="ratingcontainer">
                <div class="rating-wrap">
                  <h2>Rating:</h2>
                  <div class="center">
                    <fieldset
                      class="rating"
                      data-collection-id="<%= collection.collection_id %>"
                    >
                      <% for (let i = 5; i >= 1; i--) { %>
                      <input
                        type="radio"
                        id="star<%= collection.collection_id %><%= i %>"
                        name="rating<%= collection.collection_id %>"
                        value="<%= i %>"
                      />
                      <label
                        for="star<%= collection.collection_id %><%= i %>"
                        class="full"
                      ></label>
                      <% } %>
                      <p>Average Rating: <%= collection.average_rating %>/5</p>
                      <!-- Display average rating -->
                    </fieldset>
                  </div>
                  <h4 id="rating-value<%= collection.collection_id %>"></h4>
                </div>
              </div>
              <% } %>

              <!-- DEBUGGING - display collection.user_id and collection.collection_id for debugging -->
              <%- console.log("User ID:", userId, "Collection ID:",
              collection.collection_id) %>
            </div>
          </div>
        </div>
        <% }) %> <% } else { %>
        <h4>Please log in to interact with collections.</h4>
        <% } %>
      </div>
    </div>
  </div>
</main>

<%- include("partials/footer.ejs") %>

<script>
  function toggleLike(collectionId) {
    const likeButton = document.getElementById(`like-button-${collectionId}`);
    const likeCountElement = document.getElementById(
      `like-count-${collectionId}`
    );

    // Ensure likeCountElement is not null before accessing its innerText
    let likeCount = likeCountElement ? parseInt(likeCountElement.innerText) : 0;

    // Toggle the like button state
    if (likeButton.innerText === "Like") {
      likeButton.innerText = "Unlike";
      likeCount++;
    } else {
      likeButton.innerText = "Like";
      likeCount--;
    }

    // Update the like count display
    likeCountElement.innerText = likeCount;

    // Send request to update the like count on the server
    fetch(`/views/like-collection/${collectionId}`, {
      method: "POST",
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
      })
      .catch((error) => {
        console.error("Error updating like count:", error);
      });
  }

  // Function to submit rating data to server
  function submitRating(collectionId, ratingValue) {
    const data = {
      ratingValue: ratingValue,
      collectionId: collectionId,
    };

    fetch("/submit-rating", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then((data) => {
        const ratingElement = document.getElementById(
          "rating-value" + collectionId
        );
        if (ratingElement) {
          ratingElement.textContent = `Your rating: ${ratingValue}/5`;
        }
      })
      .catch((error) => {
        console.error("Error submitting rating:", error);
      });
  }
</script>
